# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: "develop"
          
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64
      - run: |
          # sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter config --enable-linux-desktop
      
      - name: Cache flutter dependencies
        id: cache-pub
        uses: actions/cache@v3
        env:
          cache-name: cache-pub
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
      - run: flutter pub get
      - run: flutter build linux

      - run: |
          cd build/linux/x64/release/bundle
          tar cvzf scadenziario-${{ github.run_number }}.tar.gz scadenziario data lib

      - uses: actions/upload-artifact@v3
        with:
          name: test-linux-${{ github.run_number }}
          path: build/linux/x64/release/bundle/
